// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SMS.Infrastructure.Data;

#nullable disable

namespace SMS.Infrastructure.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231220193136_seededValue")]
    partial class seededValue
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SMS.Domain.Entities.Batch", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DepartmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Batches");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a202a227-811b-4404-b30e-707a495fcada"),
                            DepartmentId = new Guid("40e2e095-c0bc-4127-a7c5-26613771b6dd"),
                            Name = "26",
                            Year = 2018
                        },
                        new
                        {
                            Id = new Guid("d335042c-9d3f-46be-b310-78cb0cbfe4f3"),
                            DepartmentId = new Guid("447d4bdd-02d0-45a8-8233-9194a2f375ed"),
                            Name = "1",
                            Year = 2019
                        });
                });

            modelBuilder.Entity("SMS.Domain.Entities.Course", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CourseCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Credit")
                        .HasColumnType("int");

                    b.Property<Guid>("InstructorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("InstructorId");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b13d51b9-dacb-497a-8a96-cfc6fa316941"),
                            CourseCode = "SE101",
                            Credit = 3,
                            InstructorId = new Guid("bbd8efde-c3c2-4974-a9f0-259e3ead2d75"),
                            Name = "Introduction to Software Engineering"
                        },
                        new
                        {
                            Id = new Guid("5187c93a-88bb-457e-9187-e6ac0ef200d5"),
                            CourseCode = "SE301",
                            Credit = 3,
                            InstructorId = new Guid("55335290-bb42-4b55-8613-a6067d359eed"),
                            Name = "Introduction to Web Programming"
                        },
                        new
                        {
                            Id = new Guid("da2c6d1f-a060-40c8-8881-f233c247341a"),
                            CourseCode = "ENG103",
                            Credit = 3,
                            InstructorId = new Guid("9e7a731d-b036-4fd7-98fb-304604ee3193"),
                            Name = "Introduction to English"
                        });
                });

            modelBuilder.Entity("SMS.Domain.Entities.Degree", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DepartmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Degrees");

                    b.HasData(
                        new
                        {
                            Id = new Guid("71e87e5c-2ab2-4acb-a079-850792ec0485"),
                            DepartmentId = new Guid("40e2e095-c0bc-4127-a7c5-26613771b6dd"),
                            Title = "BSc"
                        },
                        new
                        {
                            Id = new Guid("b49ef72c-66ed-457f-bdd7-59add3c0ffbb"),
                            DepartmentId = new Guid("447d4bdd-02d0-45a8-8233-9194a2f375ed"),
                            Title = "LLB"
                        },
                        new
                        {
                            Id = new Guid("3b46307a-7565-47e0-b0aa-d0a290ca7b0a"),
                            DepartmentId = new Guid("79aedfda-4b1e-45ab-bdc7-feafdddcfd6a"),
                            Title = "BA"
                        });
                });

            modelBuilder.Entity("SMS.Domain.Entities.Department", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = new Guid("40e2e095-c0bc-4127-a7c5-26613771b6dd"),
                            Name = "Department of Software Engineering"
                        },
                        new
                        {
                            Id = new Guid("79aedfda-4b1e-45ab-bdc7-feafdddcfd6a"),
                            Name = "Department of English"
                        },
                        new
                        {
                            Id = new Guid("447d4bdd-02d0-45a8-8233-9194a2f375ed"),
                            Name = "Department of Law"
                        });
                });

            modelBuilder.Entity("SMS.Domain.Entities.Instructor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Instructors");

                    b.HasData(
                        new
                        {
                            Id = new Guid("55335290-bb42-4b55-8613-a6067d359eed"),
                            Name = "Osama"
                        },
                        new
                        {
                            Id = new Guid("bbd8efde-c3c2-4974-a9f0-259e3ead2d75"),
                            Name = "Jabed"
                        },
                        new
                        {
                            Id = new Guid("9e7a731d-b036-4fd7-98fb-304604ee3193"),
                            Name = "Shammem"
                        });
                });

            modelBuilder.Entity("SMS.Domain.Entities.Semester", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<int>("Month")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Semesters");

                    b.HasData(
                        new
                        {
                            Id = new Guid("72c3124d-1810-4604-8188-8d2952e6d804"),
                            Duration = 6,
                            Month = 1,
                            Year = 2018
                        },
                        new
                        {
                            Id = new Guid("9557946c-0595-491c-bd5f-cbee89d19236"),
                            Duration = 6,
                            Month = 7,
                            Year = 2019
                        });
                });

            modelBuilder.Entity("SMS.Domain.Entities.SemesterCourse", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CourseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SemesterId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("SemesterId");

                    b.ToTable("SemesterCourses");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0a6f93d2-c967-43f5-a7c2-72146e297b56"),
                            CourseId = new Guid("b13d51b9-dacb-497a-8a96-cfc6fa316941"),
                            SemesterId = new Guid("72c3124d-1810-4604-8188-8d2952e6d804")
                        },
                        new
                        {
                            Id = new Guid("93243348-d24f-47b2-a70d-f929ae76fccc"),
                            CourseId = new Guid("5187c93a-88bb-457e-9187-e6ac0ef200d5"),
                            SemesterId = new Guid("9557946c-0595-491c-bd5f-cbee89d19236")
                        },
                        new
                        {
                            Id = new Guid("6257c6eb-2d03-47fe-a887-3de118b68913"),
                            CourseId = new Guid("da2c6d1f-a060-40c8-8881-f233c247341a"),
                            SemesterId = new Guid("72c3124d-1810-4604-8188-8d2952e6d804")
                        });
                });

            modelBuilder.Entity("SMS.Domain.Entities.Student", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BatchId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ClassId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JoiningBatch")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BatchId");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Id = new Guid("edfc80e0-1c2d-4112-8b47-56371dade5ab"),
                            BatchId = new Guid("a202a227-811b-4404-b30e-707a495fcada"),
                            ClassId = "182-35-2530",
                            FirstName = "Md",
                            JoiningBatch = "",
                            LastName = "Maruf",
                            MiddleName = "Shafayet"
                        },
                        new
                        {
                            Id = new Guid("a6660f6e-96bb-4d2d-9a45-f28edc0b254d"),
                            BatchId = new Guid("d335042c-9d3f-46be-b310-78cb0cbfe4f3"),
                            ClassId = "142-12-1031",
                            FirstName = "Md",
                            JoiningBatch = "",
                            LastName = "",
                            MiddleName = "Mosabbir"
                        });
                });

            modelBuilder.Entity("SMS.Domain.Entities.StudentRegistration", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SemesterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("StudentId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("SemesterId");

                    b.HasIndex("StudentId");

                    b.ToTable("StudentRegistrations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4b3efc3c-276a-4a30-9764-8a4782ce7136"),
                            SemesterId = new Guid("72c3124d-1810-4604-8188-8d2952e6d804"),
                            StudentId = new Guid("edfc80e0-1c2d-4112-8b47-56371dade5ab")
                        },
                        new
                        {
                            Id = new Guid("2b03ae45-f974-43ca-bd42-4c91849b7599"),
                            SemesterId = new Guid("9557946c-0595-491c-bd5f-cbee89d19236"),
                            StudentId = new Guid("a6660f6e-96bb-4d2d-9a45-f28edc0b254d")
                        });
                });

            modelBuilder.Entity("SMS.Domain.Entities.StudentRegistrationCourse", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CourseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("StudentRegistrationId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("StudentRegistrationId");

                    b.ToTable("StudentRegistrationCourses");

                    b.HasData(
                        new
                        {
                            Id = new Guid("09055894-c849-43b8-aab1-46f9f49935bb"),
                            CourseId = new Guid("b13d51b9-dacb-497a-8a96-cfc6fa316941"),
                            StudentRegistrationId = new Guid("4b3efc3c-276a-4a30-9764-8a4782ce7136")
                        });
                });

            modelBuilder.Entity("SMS.Domain.Entities.Batch", b =>
                {
                    b.HasOne("SMS.Domain.Entities.Department", "Department")
                        .WithMany("Batches")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("SMS.Domain.Entities.Course", b =>
                {
                    b.HasOne("SMS.Domain.Entities.Instructor", "Instructor")
                        .WithMany("Courses")
                        .HasForeignKey("InstructorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Instructor");
                });

            modelBuilder.Entity("SMS.Domain.Entities.Degree", b =>
                {
                    b.HasOne("SMS.Domain.Entities.Department", "Department")
                        .WithMany("Degrees")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("SMS.Domain.Entities.SemesterCourse", b =>
                {
                    b.HasOne("SMS.Domain.Entities.Course", "Course")
                        .WithMany("SemesterCourses")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SMS.Domain.Entities.Semester", "Semester")
                        .WithMany("SemesterCourses")
                        .HasForeignKey("SemesterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Semester");
                });

            modelBuilder.Entity("SMS.Domain.Entities.Student", b =>
                {
                    b.HasOne("SMS.Domain.Entities.Batch", "Batch")
                        .WithMany("Students")
                        .HasForeignKey("BatchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Batch");
                });

            modelBuilder.Entity("SMS.Domain.Entities.StudentRegistration", b =>
                {
                    b.HasOne("SMS.Domain.Entities.Semester", "Semester")
                        .WithMany("StudentRegistrations")
                        .HasForeignKey("SemesterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SMS.Domain.Entities.Student", "Student")
                        .WithMany("StudentRegistrations")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Semester");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("SMS.Domain.Entities.StudentRegistrationCourse", b =>
                {
                    b.HasOne("SMS.Domain.Entities.Course", "Course")
                        .WithMany("StudentRegistrationCourses")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SMS.Domain.Entities.StudentRegistration", "StudentRegistration")
                        .WithMany("StudentRegistrationCourses")
                        .HasForeignKey("StudentRegistrationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("StudentRegistration");
                });

            modelBuilder.Entity("SMS.Domain.Entities.Batch", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("SMS.Domain.Entities.Course", b =>
                {
                    b.Navigation("SemesterCourses");

                    b.Navigation("StudentRegistrationCourses");
                });

            modelBuilder.Entity("SMS.Domain.Entities.Department", b =>
                {
                    b.Navigation("Batches");

                    b.Navigation("Degrees");
                });

            modelBuilder.Entity("SMS.Domain.Entities.Instructor", b =>
                {
                    b.Navigation("Courses");
                });

            modelBuilder.Entity("SMS.Domain.Entities.Semester", b =>
                {
                    b.Navigation("SemesterCourses");

                    b.Navigation("StudentRegistrations");
                });

            modelBuilder.Entity("SMS.Domain.Entities.Student", b =>
                {
                    b.Navigation("StudentRegistrations");
                });

            modelBuilder.Entity("SMS.Domain.Entities.StudentRegistration", b =>
                {
                    b.Navigation("StudentRegistrationCourses");
                });
#pragma warning restore 612, 618
        }
    }
}
